{"version":3,"sources":["components/mediaQueries.js","components/LoginButton.js","components/App.js","components/Song.js","components/TopSongs.js","components/PersonsData.js","components/Dropdown.js","components/Modal.js","components/RedirectPage.js","components/NotFoundPage.js","router/AppRouter.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","LoginButtonStyle","styled","button","LoginButton","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","type","onClick","window","location","AppStyle","div","App","className","SongStyle","li","Song","trackData","onPlay","isPlaying","onEnd","currentID","useState","Audio","preview_url","songAudio","useEffect","play","pause","addEventListener","removeEventListener","bottom","style","color","src","album","images","url","alt","name","artists","href","external_urls","spotify","target","rel","TopSongsStyle","TopSongs","topArtists","currentPlay","setCurrentPlay","console","log","length","map","track","isPlay","id","PersonsDataStyle","PersonsData","personsID","personsData","setPersonsData","parsedHash","queryString","parse","hash","a","axios","method","headers","Authorization","access_token","response","data","display_name","personsInfo","persons_id","image","getPersonsData","onLoad","DropdownStyle","Dropdown","options","sortValue","selectRef","useRef","ref","onChange","e","value","option","index","text","ModalStyle","Modal","show","onClose","POSTvalue","playlistSongs","playlistName","setPlaylistName","playlistUrl","setPlaylistUrl","action","onSubmit","preventDefault","description","public","then","urisArray","song","push","uri","uris","createPlaylistPOST","htmlFor","RedirectPageStyle","RedirectPage","settopArtists","loading","setLoading","rangeValue","setRangeValue","limitValue","setLimitValue","showModal","setShowModal","personsId","setPersonsId","urlAPI","items","getTopArtitsData","isNaN","NotFoundPage","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5faccaeb.chunk.js","sourcesContent":["const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"500px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n};\n","// Main packages\nimport React from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst LoginButtonStyle = styled.button`\n  cursor: pointer;\n  font-size: 16px;\n  background-color: #1db954;\n  color: #fff;\n  padding: 10px 100px;\n  margin: 20px;\n  border: none;\n  border-radius: 20px;\n  transition: all 0.3s;\n\n  &:hover {\n    background-color: #14883d;\n  }\n\n  // Responsive styling\n  @media ${device.tablet} {\n    padding: 10px 50px;\n  }\n`;\n\n//Login button\nexport default function LoginButton() {\n  //Enviroment variables\n  const {\n    REACT_APP_CLIENT_ID,\n    REACT_APP_AUTHORIZE_URL,\n    REACT_APP_REDIRECT_URL,\n  } = process.env;\n\n  //Function reddirects to Spotify Authentication page\n  function handleLogin() {\n    window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true&scope=user-top-read%20playlist-modify-private%20playlist-modify-public`;\n  }\n\n  return (\n    <LoginButtonStyle type=\"submit\" onClick={handleLogin}>\n      LOG IN\n    </LoginButtonStyle>\n  );\n}\n","// Main packages\nimport React from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport LoginButton from \"./LoginButton\";\nimport { device } from \"./mediaQueries\";\n\nconst AppStyle = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100vh;\n\n  .login-content-wrapper {\n    padding: 20px;\n    .login-content {\n      padding: 20px;\n      margin: 50px 200px;\n      background: rgba(0, 0, 0, 0.644);\n      backdrop-filter: saturate(180%) blur(10px);\n      border-radius: 20px;\n\n      h1 {\n        font-size: 50px;\n        padding: 10px;\n      }\n      .app-description {\n        font-size: 20px;\n\n        p {\n          padding: 5px;\n        }\n      }\n    }\n  }\n\n  // Responsive styling\n  @media ${device.laptop} {\n    .login-content-wrapper {\n      .login-content {\n        margin: 50px;\n\n        h1 {\n          font-size: 40px;\n        }\n        .app-description {\n          font-size: 17px;\n        }\n      }\n    }\n  }\n\n  @media ${device.tablet} {\n    .login-content-wrapper {\n      .login-content {\n        margin: 0px;\n\n        h1 {\n          font-size: 30px;\n        }\n        .app-description {\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default function App() {\n  return (\n    <AppStyle>\n      <div className=\"login-content-wrapper\">\n        <div className=\"login-content\">\n          <h1>Your Top Spotify Songs</h1>\n          <div className=\"app-description\">\n            <p>Check your top tracks based on calculated affinity</p>\n            <p>\n              See your all time or just last month top tracks, listen to\n              previews of the songs, open tem on Spotify or create a playlist\n              and listen your favorite tracks any time you want\n            </p>\n          </div>\n          <LoginButton />\n        </div>\n      </div>\n    </AppStyle>\n  );\n}\n","// Main packages\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FaPlay, FaPause, FaRegMeh, FaSpotify } from \"react-icons/fa\";\nimport Fade from \"react-reveal/Fade\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst SongStyle = styled.li`\n  display: grid;\n  grid-template-columns: auto auto 1fr 1fr auto;\n  padding: 10px 20px;\n  background-color: #000000;\n  margin: 5px;\n  border-radius: 20px;\n  transition: all 0.5s;\n\n  &:hover {\n    background-color: #000000;\n  }\n\n  .img-wrapper {\n    display: flex;\n    align-items: center;\n    img {\n      width: 70px;\n      vertical-align: middle;\n    }\n  }\n\n  .audio-preview {\n    display: grid;\n    align-items: center;\n\n    .icons {\n      background-color: #1db954;\n      padding: 15px;\n      border-radius: 10px;\n      font-size: 15px;\n      margin: 10px 20px 10px 10px;\n      vertical-align: middle;\n      transition: all 0.3s;\n      color: #fff;\n\n      &:hover {\n        background-color: #14883d;\n      }\n    }\n\n    .play-pause {\n      cursor: pointer;\n    }\n  }\n\n  .track-name {\n    display: flex;\n    align-items: center;\n    padding: 0 20px;\n  }\n\n  .artist-name {\n    display: flex;\n    align-items: center;\n  }\n\n  .song-to-spotify {\n    display: grid;\n    align-items: center;\n    button {\n      cursor: pointer;\n      font-size: 13px;\n      background-color: #1db954;\n      color: #fff;\n      padding: 10px 15px;\n      border: none;\n      border-radius: 20px;\n      transition: all 0.3s;\n\n      &:hover {\n        background-color: #14883d;\n      }\n\n      .spotify-icon {\n        font-size: 13px;\n        margin-right: 5px;\n      }\n    }\n  }\n\n  // Responsive style\n  @media ${device.laptopL} {\n    padding: 10px;\n    .track-name {\n      h3 {\n        font-size: 18px;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    /* padding: 0px; */\n    display: grid;\n    grid-template-columns: auto auto 1fr 1fr auto;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"audio image artist artist button\"\n      \"audio image track track button\";\n\n    .audio-preview {\n      grid-area: audio;\n\n      .icons {\n        padding: 10px;\n        border-radius: 10px;\n        font-size: 15px;\n        margin: 10px 20px 10px 10px;\n        vertical-align: middle;\n      }\n    }\n\n    .img-wrapper {\n      grid-area: image;\n      img {\n        width: 50px;\n      }\n    }\n\n    .track-name {\n      grid-area: track;\n      h3 {\n        font-size: 15px;\n      }\n    }\n\n    .artist-name {\n      grid-area: artist;\n      padding: 0 20px;\n      font-size: 13px;\n    }\n\n    .song-to-spotify {\n      grid-area: button;\n\n      button {\n        font-size: 0px;\n        padding: 10px 10px;\n\n        .spotify-icon {\n          font-size: 15px;\n          margin-right: 0px;\n        }\n      }\n      span {\n        display: none;\n      }\n    }\n  }\n\n  @media ${device.tablet} {\n    .track-name {\n      h3 {\n        font-size: 13px;\n      }\n    }\n\n    .artist-name {\n      grid-area: artist;\n      padding: 0 20px;\n      font-size: 11px;\n    }\n  }\n`;\n\nexport default function Song({\n  trackData,\n  onPlay,\n  isPlaying,\n  currentID,\n  onEnd,\n}) {\n  // State for play and pause preview\n  const [songAudio] = useState(new Audio(trackData.preview_url));\n  // const [playSongPreview, setPlaySongPreview] = useState(false);\n\n  useEffect(() => {\n    isPlaying ? songAudio.play() : songAudio.pause();\n    // This is cleanup of the effect\n    return () => songAudio.pause();\n  }, [isPlaying, songAudio]);\n\n  // When song ends, change state back to false\n  useEffect(() => {\n    songAudio.addEventListener(\"ended\", () => onEnd());\n    return () => {\n      songAudio.removeEventListener(\"ended\", () => onEnd());\n    };\n  }, [songAudio, onEnd]);\n\n  function togglePlay() {\n    onPlay(!isPlaying);\n    // const newPlaySongPreview = !playSongPreview;\n    // setPlaySongPreview(newPlaySongPreview);\n\n    // newPlaySongPreview && onPlay(); // Trigger onPlay callback if newPlaySongPreview === true\n    // songAudio.pause();\n  }\n\n  // console.log(trackData);\n  return (\n    <Fade bottom>\n      <SongStyle>\n        <div className=\"audio-preview\">\n          {trackData.preview_url == null ? (\n            <FaRegMeh style={{ color: \"#ffffff\" }} className=\"icons\" />\n          ) : (\n            <div onClick={() => togglePlay()}>\n              {isPlaying ? (\n                <FaPause\n                  style={{ color: \"#ffffff\" }}\n                  className=\"icons play-pause\"\n                />\n              ) : (\n                <FaPlay className=\"icons play-pause\" />\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"img-wrapper\">\n          <img\n            src={trackData.album.images[0].url}\n            alt={`Track images ${trackData.name}`}\n          />\n        </div>\n        <div className=\"track-name\">\n          <h3>{trackData.name}</h3>\n        </div>\n        <div className=\"artist-name\">\n          <p>{trackData.album.artists[0].name}</p>\n        </div>\n        <div className=\"song-to-spotify\">\n          <a\n            href={trackData.external_urls.spotify}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\">\n            <button>\n              <FaSpotify className=\"spotify-icon\" />\n              <span>Open in Spotify</span>\n            </button>\n          </a>\n        </div>\n      </SongStyle>\n    </Fade>\n  );\n}\n","// Main packages\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport Song from \"./Song\";\nimport { device } from \"./mediaQueries\";\n\nconst TopSongsStyle = styled.div`\n  ul {\n    display: grid;\n    justify-content: center;\n    grid-template-columns: repeat(1, 1fr);\n    list-style: none;\n    margin: 0 100px;\n  }\n\n  // Responsive style\n  @media ${device.laptopL} {\n    ul {\n      margin: 0 50px;\n    }\n  }\n\n  @media ${device.laptop} {\n    ul {\n      margin: 0 20px;\n    }\n  }\n`;\n\nexport default function TopSongs({ topArtists }) {\n  const [currentPlay, setCurrentPlay] = useState(null);\n  console.log(\"State from TOPSongs:\", currentPlay);\n\n  return (\n    <TopSongsStyle>\n      {topArtists.length === 0 ? (\n        <h2>No songs available from this time range!</h2>\n      ) : (\n        <ul>\n          {topArtists.map((track) => {\n            return (\n              <Song\n                key={track.id}\n                currentID={currentPlay}\n                onPlay={(isPlay) =>\n                  isPlay ? setCurrentPlay(track.id) : setCurrentPlay(null)\n                }\n                onEnd={() => {\n                  setCurrentPlay(null);\n                }}\n                isPlaying={track.id === currentPlay}\n                trackData={track}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </TopSongsStyle>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst PersonsDataStyle = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px 20px;\n  img {\n    width: 40px;\n    height: auto;\n    border-radius: 100%;\n  }\n\n  h3 {\n    font-size: 15px;\n    padding: 0 20px;\n  }\n\n  @media ${device.laptop} {\n    justify-content: center;\n    img {\n      width: 30px;\n    }\n    h3 {\n      font-size: 14px;\n      padding: 0 10px;\n    }\n  }\n`;\n\nexport default function PersonsData({ personsID }) {\n  const [personsData, setPersonsData] = useState({});\n\n  useEffect(() => {\n    const parsedHash = queryString.parse(window.location.hash);\n    async function getPersonsData() {\n      const response = await axios({\n        method: \"GET\",\n        url: \"https://api.spotify.com/v1/me\",\n        headers: {\n          Authorization: \"Bearer \" + parsedHash.access_token,\n        },\n      });\n\n      const { id, display_name, images } = response.data;\n      const personsInfo = {\n        persons_id: id,\n        display_name: display_name,\n        image: images[0].url,\n      };\n\n      setPersonsData(personsInfo);\n    }\n    getPersonsData();\n  }, []);\n\n  return (\n    <PersonsDataStyle onLoad={() => personsID(personsData.persons_id)}>\n      <div className=\"px-4\">\n        <img\n          className=\"w-8 object-cover rounded-full\"\n          src={personsData.image}\n          alt=\"profile_pic\"\n        />\n      </div>\n      <h3 className=\"px-4\">{personsData.display_name}</h3>\n    </PersonsDataStyle>\n  );\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst DropdownStyle = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 20px 0px 20px;\n  select {\n    background-color: rgba(0, 0, 0, 0.7);\n    color: #ffffff;\n    outline: none;\n    border: none;\n    border-radius: 25px;\n    font-size: 13px;\n    background-color: #1db954;\n    color: #fff;\n    padding: 9px 15px;\n  }\n\n  @media ${device.laptop} {\n    select {\n      font-size: 12px;\n      padding: 8px 14px;\n    }\n  }\n\n  @media ${device.tablet} {\n    margin: 5px 10px 10px 10px;\n    select {\n      font-size: 14px;\n      padding: 7px 13px;\n    }\n  }\n`;\n\nexport default function Dropdown({ options, sortValue }) {\n  // Select reference to Select element\n  const selectRef = useRef();\n\n  return (\n    <DropdownStyle>\n      <select\n        ref={selectRef}\n        onChange={(e) => {\n          // Passsing sort value to parent\n          sortValue(e.target.value);\n        }}>\n        {options.map((option, index) => {\n          return (\n            <option key={index} value={option.value}>\n              {option.text}\n            </option>\n          );\n        })}\n      </select>\n    </DropdownStyle>\n  );\n}\n","// Main packages\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\n\nconst ModalStyle = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.555);\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: all 0.3s ease-in-out;\n  pointer-events: none;\n\n  &.show {\n    opacity: 1;\n    pointer-events: visible;\n\n    .modal-box {\n      transform: translateY(0px);\n    }\n  }\n\n  .modal-box {\n    display: grid;\n    background: #fff;\n    color: #000;\n    padding: 16px;\n    border-radius: 8px;\n    transition: all 0.5s;\n    transform: translateY(-50px);\n    transition: all 0.5s ease-in-out;\n\n    h1 {\n      text-align: center;\n      font-size: 18px;\n    }\n\n    .input-playlist-name {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 10px 0px;\n      label {\n        font-size: 14px;\n        color: #121212;\n      }\n\n      input {\n        border: none;\n        outline: none;\n        border-bottom: 2px solid black;\n        padding: 3px;\n      }\n    }\n\n    .modal-buttons {\n      text-align: center;\n      display: grid;\n\n      .close-modal {\n        text-align: center;\n        background-color: #fff;\n        border: none;\n        color: rgba(0, 0, 0, 0.5);\n        padding: 8px 34px;\n        line-height: 18px;\n        font-size: 13px;\n        letter-spacing: 1.76px;\n        cursor: pointer;\n      }\n\n      .form-submit {\n        cursor: pointer;\n        font-size: 13px;\n        background-color: #1db954;\n        color: #fff;\n        padding: 9px 15px;\n        margin: 10px 20px;\n        border: none;\n        border-radius: 20px;\n        transition: all 0.3s;\n\n        &:hover {\n          background-color: #14883d;\n        }\n      }\n    }\n  }\n`;\n\nexport default function Modal({ show, onClose, POSTvalue, playlistSongs }) {\n  // State for user input (playlist name)\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [playlistUrl, setPlaylistUrl] = useState(null);\n  console.log(\"TEST\", playlistUrl);\n\n  function handleSubmit(e) {\n    // Prevents event default action\n    e.preventDefault();\n\n    // Capture access tokkens values\n    const parsedHash = queryString.parse(window.location.hash);\n    const url = `https://api.spotify.com/v1/users/${POSTvalue}/playlists`;\n\n    async function createPlaylistPOST() {\n      // POST method to create new playlist\n      await axios({\n        method: \"POST\",\n        url: url,\n        headers: {\n          Authorization: \"Bearer \" + parsedHash.access_token,\n          \"Content-Type\": \"application/json\",\n        },\n        data: {\n          name: playlistName,\n          description: \"Your top tracks based on calculated affinity\",\n          public: false,\n        },\n      }).then((response) => {\n        setPlaylistUrl(response.data.external_urls.spotify);\n        // Empty array to store playlists songs uris\n        const urisArray = [];\n        playlistSongs.map((song) => urisArray.push(song.uri));\n\n        // POST method to add songs to just created playlist\n        axios({\n          method: \"POST\",\n          url: `https://api.spotify.com/v1/playlists/${response.data.id}/tracks`,\n          headers: {\n            Authorization: \"Bearer \" + parsedHash.access_token,\n            \"Content-Type\": \"application/json\",\n          },\n          data: {\n            uris: urisArray,\n          },\n        });\n      });\n    }\n    // Calling create playlist\n    createPlaylistPOST();\n  }\n\n  return (\n    <ModalStyle className={`${show ? \"show\" : \"\"}`}>\n      {playlistUrl ? (\n        <div className={`modal-box`}>\n          <div className=\"modal-buttons\">\n            <a href={playlistUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n              <button className=\"form-submit\" type=\"button\">\n                Open playlist in Spotify\n              </button>\n            </a>\n            <button\n              className=\"close-modal\"\n              type=\"button\"\n              onClick={() => {\n                setPlaylistUrl(null);\n                onClose();\n              }}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      ) : (\n        <form action=\"\" onSubmit={handleSubmit} className=\"modal-box\">\n          <h1>CREATE A PLAYLIST</h1>\n          <div className=\"input-playlist-name\">\n            <label htmlFor=\"\">Playlist Name:</label>\n            <input\n              type=\"text\"\n              onChange={(e) => setPlaylistName(e.target.value)}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <input\n              className=\"form-submit\"\n              type=\"submit\"\n              value=\"Create playlist\"\n            />\n            <button className=\"close-modal\" type=\"button\" onClick={onClose}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n    </ModalStyle>\n  );\n}\n","// Main packages\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\n// Components\nimport TopSongs from \"./TopSongs\";\nimport PersonsData from \"./PersonsData\";\nimport Dropdown from \"./Dropdown\";\nimport Modal from \"./Modal\";\nimport { device } from \"./mediaQueries\";\n\nconst RedirectPageStyle = styled.div`\n  nav {\n    position: fixed;\n    overflow: hidden;\n    width: 100%;\n    z-index: 1;\n    top: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #000000;\n    color: #ffffff;\n    padding: 10px;\n\n    .dropdown-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  .content-wrapper {\n    padding: 100px 50px;\n    display: flex;\n    justify-content: center;\n\n    #loading {\n      display: inline-block;\n      width: 50px;\n      height: 50px;\n      border: 3px solid rgba(255, 255, 255, 0.3);\n      border-radius: 50%;\n      border-top-color: #fff;\n      animation: spin 1s ease-in-out infinite;\n      -webkit-animation: spin 1s ease-in-out infinite;\n    }\n\n    @keyframes spin {\n      to {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n    @-webkit-keyframes spin {\n      to {\n        -webkit-transform: rotate(360deg);\n      }\n    }\n  }\n\n  .modal-button {\n    cursor: pointer;\n    font-size: 13px;\n    background-color: #1db954;\n    color: #fff;\n    padding: 9px 15px;\n    margin: 10px 20px;\n    border: none;\n    border-radius: 20px;\n    transition: all 0.3s;\n\n    &:hover {\n      background-color: #14883d;\n    }\n  }\n\n  // Responsive style\n  @media ${device.laptopL} {\n    nav {\n      padding: 5px 0;\n    }\n\n    .content-wrapper {\n      padding: 100px 0px;\n    }\n  }\n  @media ${device.laptop} {\n    nav {\n      display: grid;\n      grid-template-columns: repeat(1, 1fr);\n\n      .dropdown-wrapper {\n        order: 1;\n      }\n    }\n\n    .content-wrapper {\n      padding: 100px 0px;\n    }\n\n    .modal-button {\n      padding: 8px 14px;\n      font-size: 12px;\n    }\n  }\n\n  @media ${device.tablet} {\n    nav {\n      border-bottom-left-radius: 20px;\n      border-bottom-right-radius: 20px;\n    }\n    .content-wrapper {\n      padding: 100px 0px 70px 0px;\n    }\n    .create-playlist {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      background-color: #000000;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      padding: 10px 0;\n      border-top-left-radius: 20px;\n      border-top-right-radius: 20px;\n      .modal-button {\n        font-size: 15px;\n        padding: 7px 13px;\n        margin: 10px;\n      }\n    }\n  }\n`;\n\nexport default function RedirectPage() {\n  // State for Spotify data\n  const [topArtists, settopArtists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // State for sorting data\n  const [rangeValue, setRangeValue] = useState(\"long_term\");\n  const [limitValue, setLimitValue] = useState(50);\n  // State for showing modal\n  const [showModal, setShowModal] = useState(false);\n  //State for persons ID\n  const [personsId, setPersonsId] = useState(null);\n\n  // Getting data form Spotify API\n  useEffect(() => {\n    const parsedHash = queryString.parse(window.location.hash);\n    async function getTopArtitsData() {\n      const urlAPI = `https://api.spotify.com/v1/me/top/tracks?time_range=${rangeValue}&limit=${limitValue}&offset=5`;\n      const response = await axios({\n        method: \"GET\",\n        url: urlAPI,\n\n        headers: {\n          Authorization: \"Bearer \" + parsedHash.access_token,\n        },\n      });\n      setLoading(true);\n\n      console.log(response);\n      const { items } = response.data;\n      settopArtists(items);\n    }\n\n    getTopArtitsData();\n  }, [rangeValue, limitValue]);\n\n  // Dropdown values\n  const dropDownTime = [\n    {\n      text: \"All time\",\n      value: \"long_term\",\n    },\n    {\n      text: \"Last 6 months\",\n      value: \"medium_term\",\n    },\n    {\n      text: \"Last month\",\n      value: \"short_term\",\n    },\n  ];\n\n  const dropDownSongs = [\n    {\n      text: \"50 Songs\",\n      value: 50,\n    },\n    {\n      text: \"30 songs\",\n      value: 30,\n    },\n    {\n      text: \"10 songs\",\n      value: 10,\n    },\n  ];\n\n  function sortValue(value) {\n    // If sorting value is not anumber set Range, if it is number, set Limit\n    isNaN(value) ? setRangeValue(value) : setLimitValue(value);\n  }\n\n  // Callback function to get persons ID\n  const getPersonsId = (personsId) => {\n    setPersonsId(personsId);\n  };\n\n  return (\n    <RedirectPageStyle>\n      <nav>\n        <div className=\"dropdown-wrapper\">\n          <Dropdown sortValue={sortValue} options={dropDownTime} />\n          <Dropdown sortValue={sortValue} options={dropDownSongs} />\n          <div className=\"create-playlist\">\n            <button\n              className=\"modal-button\"\n              onClick={() => {\n                setShowModal(true);\n              }}>\n              Create Playlist\n            </button>\n          </div>\n        </div>\n        <PersonsData personsID={getPersonsId} />\n      </nav>\n      <div className=\"content-wrapper\">\n        <Modal\n          POSTvalue={personsId}\n          onClose={() => setShowModal(false)}\n          show={showModal}\n          playlistSongs={topArtists}\n        />\n        {loading ? (\n          <TopSongs topArtists={topArtists} />\n        ) : (\n          <div id=\"loading\"></div>\n        )}\n      </div>\n    </RedirectPageStyle>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      <h1>PAGE NOT FOUND</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"../components/App\";\nimport RedirectPage from \"../components/RedirectPage\";\nimport NotFoundPage from \"../components/NotFoundPage\";\n\n// Creating page routes component\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/*Login page*/}\n        <Route exact path=\"/\" component={App} />\n        {/*Redirect after login page*/}\n        <Route path=\"/redirect\" component={RedirectPage} />\n        {/*Page not Found*/}\n        <Route component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"./router/AppRouter\";\n// Importing the Bootstrap CSS\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}