{"version":3,"sources":["styles/GlobalStyle.js","components/mediaQueries.js","components/LoginButton.js","components/App.js","components/Song.js","components/TopSongs.js","components/PersonsData.js","components/Dropdown.js","components/Modal.js","components/RedirectPage.js","components/NotFoundPage.js","router/AppRouter.js","index.js"],"names":["GlobalStyles","createGlobalStyle","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","LoginButtonStyle","styled","button","LoginButton","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","type","onClick","window","location","AppStyle","div","App","GlobalStyle","className","SongStyle","li","props","colorOnPlay","songColor","Song","trackData","onPlay","isPlaying","onEnd","currentID","useState","Audio","preview_url","songAudio","colors","setColors","useEffect","play","pause","addEventListener","removeEventListener","bottom","style","color","rgb","getColors","src","album","images","url","alt","name","artists","href","external_urls","spotify","target","rel","TopSongsStyle","TopSongs","topArtists","currentPlay","setCurrentPlay","length","map","track","key","id","isPlay","PersonsDataStyle","PersonsData","personsID","personsData","setPersonsData","parsedHash","queryString","parse","hash","a","axios","method","headers","Authorization","access_token","response","data","display_name","personsInfo","persons_id","image","getPersonsData","onLoad","DropdownStyle","Dropdown","options","sortValue","selectRef","useRef","ref","onChange","e","value","option","index","text","ModalStyle","Modal","show","onClose","POSTvalue","playlistSongs","playlistName","setPlaylistName","playlistUrl","setPlaylistUrl","console","log","action","onSubmit","preventDefault","description","public","then","urisArray","song","push","uri","uris","createPlaylistPOST","htmlFor","RedirectPageStyle","RedirectPage","settopArtists","loading","setLoading","rangeValue","setRangeValue","limitValue","setLimitValue","showModal","setShowModal","personsId","setPersonsId","urlAPI","items","getTopArtitsData","isNaN","NotFoundPage","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6a3ec7d4.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n    *{\n        font-family: 'Poppins', sans-serif;\n        \n    }\n    :root {\n        \n    }\n\n    html {\n        margin: 0;\n        padding: 0;\n      \n    }\n\n    body {\n        box-sizing: border-box;\n        background-color: #3450a1;\n        background-size: cover;\n        color: #ffffff;\n    }\n\n`;\n\nexport default GlobalStyles;\n","const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"544px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n};\n","// Main packages\nimport React from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst LoginButtonStyle = styled.button`\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 16px;\n  background-color: #dc07f3;\n  color: #fff;\n  padding: 10px 100px;\n  margin: 20px;\n  border: none;\n  border-radius: 7px;\n  letter-spacing: 0.04em;\n  transition: all 0.3s;\n  box-shadow: 0px 24px 32px rgba(220, 7, 243, 0.14),\n    0px 16px 24px rgba(220, 7, 243, 0.1), 0px 2px 6px rgba(220, 7, 243, 0.08),\n    0px 0px 1px rgba(0, 0, 0, 0.04);\n\n  &:hover {\n    background-color: #ba0ace;\n  }\n\n  // Responsive styling\n  @media ${device.tablet} {\n    padding: 10px 50px;\n  }\n`;\n\n//Login button\nexport default function LoginButton() {\n  //Enviroment variables\n  const {\n    REACT_APP_CLIENT_ID,\n    REACT_APP_AUTHORIZE_URL,\n    REACT_APP_REDIRECT_URL,\n  } = process.env;\n\n  //Function reddirects to Spotify Authentication page\n  function handleLogin() {\n    window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true&scope=user-top-read%20playlist-modify-private%20playlist-modify-public`;\n  }\n\n  return (\n    <LoginButtonStyle type=\"submit\" onClick={handleLogin}>\n      LOG IN\n    </LoginButtonStyle>\n  );\n}\n","// Main packages\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport \"normalize.css\";\n// Components\nimport GlobalStyles from \"../styles/GlobalStyle\";\nimport LoginButton from \"./LoginButton\";\nimport { device } from \"./mediaQueries\";\n\nconst AppStyle = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100vh;\n\n  .login-content-wrapper {\n    padding: 20px;\n    .login-content {\n      padding: 20px;\n      margin: 50px 200px;\n      background: rgba(0, 0, 0, 0.644);\n      backdrop-filter: saturate(180%) blur(10px);\n      border-radius: 20px;\n      box-shadow: 0px 41px 93px rgba(0, 0, 0, 0.0403024),\n        0px 14.9657px 33.9465px rgba(0, 0, 0, 0.0576822),\n        0px 7.26556px 16.4804px rgba(0, 0, 0, 0.0723178),\n        0px 3.56171px 8.079px rgba(0, 0, 0, 0.0896976),\n        0px 1.40831px 3.19445px rgba(0, 0, 0, 0.13);\n\n      h1 {\n        font-size: 50px;\n        padding: 10px;\n      }\n      .app-description {\n        font-size: 20px;\n\n        p {\n          font-weight: 700;\n          letter-spacing: 0.04em;\n          padding: 5px;\n        }\n      }\n    }\n  }\n\n  // Responsive styling\n  @media ${device.laptop} {\n    .login-content-wrapper {\n      .login-content {\n        margin: 50px;\n\n        h1 {\n          font-size: 40px;\n        }\n        .app-description {\n          font-size: 17px;\n        }\n      }\n    }\n  }\n\n  @media ${device.tablet} {\n    .login-content-wrapper {\n      .login-content {\n        margin: 0px;\n\n        h1 {\n          font-size: 30px;\n        }\n        .app-description {\n          font-size: 20px;\n        }\n      }\n    }\n  }\n`;\n\nexport default function App() {\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <AppStyle>\n        <div className=\"login-content-wrapper\">\n          <div className=\"login-content\">\n            <h1>Your Top Spotify Songs</h1>\n            <div className=\"app-description\">\n              <p>Check your top tracks based on calculated affinity</p>\n              <p>\n                See your all time or just last month top tracks, listen to\n                previews of the songs, open them on Spotify or create a playlist\n                and listen your favorite tracks any time you want\n              </p>\n            </div>\n            <LoginButton />\n          </div>\n        </div>\n      </AppStyle>\n    </Fragment>\n  );\n}\n","// Main packages\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FaPlay, FaPause, FaRegMeh } from \"react-icons/fa\";\nimport Fade from \"react-reveal/Fade\";\nimport { ColorExtractor } from \"react-color-extractor\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst SongStyle = styled.li`\n  position: relative;\n  display: grid;\n  grid-template-columns: auto 600px;\n  padding: 10px 0px;\n  background-color: rgba(4, 25, 85, 0.5);\n  box-shadow: ${(props) =>\n    props.colorOnPlay\n      ? `0px 41px 93px rgba(0, 0, 0, 0.0403024),\n      0px 14.9657px 33.9465px rgba(0, 0, 0, 0.0576822),\n      0px 7.26556px 16.4804px rgba(0, 0, 0, 0.0723178),\n      0px 3.56171px 8.079px rgba(0, 0, 0, 0.0896976),\n      0px 1.40831px 3.19445px rgba(0, 0, 0, 0.13),\n      inset 70px 0px 50px -30px rgba(${props.songColor}, 0.8);`\n      : `0px 41px 93px rgba(0, 0, 0, 0.0403024),\n    0px 14.9657px 33.9465px rgba(0, 0, 0, 0.0576822),\n    0px 7.26556px 16.4804px rgba(0, 0, 0, 0.0723178),\n    0px 3.56171px 8.079px rgba(0, 0, 0, 0.0896976),\n    0px 1.40831px 3.19445px rgba(0, 0, 0, 0.13);`};\n  border-radius: 7px;\n  margin: 25px 0;\n  transition: box-shadow 0.3s;\n\n  .img-wrapper {\n    display: flex;\n    align-items: center;\n    padding: 17px 13px;\n\n    img {\n      width: 100px;\n      vertical-align: middle;\n      border-radius: 7px;\n      transition: 0.5s border;\n    }\n  }\n\n  li {\n    position: relative;\n  }\n\n  .audio-preview {\n    opacity: 1;\n    position: absolute;\n    top: 95px;\n    left: 102px;\n\n    .icons {\n      background-color: #dc07f3;\n      color: #fff;\n      padding: 13px;\n      border-radius: 7px;\n      vertical-align: middle;\n      box-shadow: 0px 17px 45px rgba(217, 0, 225, 0.55),\n        0px 3.79717px 10.0513px rgba(217, 0, 225, 0.327859),\n        0px 1.13052px 2.99255px rgba(217, 0, 225, 0.222141);\n      transition: all 0.3s;\n      transform: translateY(0px);\n\n      &:hover {\n        background-color: #ba0ace;\n      }\n    }\n\n    .play-pause {\n      cursor: pointer;\n    }\n  }\n\n  .titles {\n    display: flex;\n    flex-direction: column;\n    padding: 20px 0;\n    margin: 0;\n    .track-name {\n      font-weight: bold;\n      font-size: 18px;\n      margin: 0;\n      padding: 0 0 10px 0;\n\n      h3 {\n        margin: 0;\n      }\n    }\n\n    .artist-name {\n      margin: 0;\n      font-weight: normal;\n      font-size: 15px;\n      letter-spacing: 0.04em;\n\n      p {\n        margin: 0;\n      }\n    }\n  }\n\n  .song-to-spotify {\n    display: grid;\n    align-items: center;\n    position: absolute;\n    right: 50px;\n    bottom: -20px;\n    button {\n      cursor: pointer;\n      background-color: #dc07f3;\n      color: #fff;\n      padding: 15px;\n      border: none;\n      border-radius: 7px;\n      transition: all 0.3s;\n      font-weight: bold;\n      font-size: 13px;\n      letter-spacing: 0.08em;\n      transition: all 0.3s;\n      box-shadow: 0px 24px 32px rgba(220, 7, 243, 0.14),\n        0px 16px 24px rgba(220, 7, 243, 0.1),\n        0px 2px 6px rgba(220, 7, 243, 0.08), 0px 0px 1px rgba(0, 0, 0, 0.04);\n\n      &:hover {\n        background-color: #ba0ace;\n      }\n    }\n  }\n\n  // Responsive style\n\n  @media ${device.tablet} {\n    grid-template-columns: auto 400px;\n\n    .titles {\n      padding-left: 30px;\n      padding-right: 30px;\n      .track-name {\n        h3 {\n          font-size: 15px;\n        }\n      }\n\n      .artist-name {\n        font-size: 11px;\n      }\n    }\n  }\n\n  @media ${device.mobileL} {\n    grid-template-columns: auto 1fr;\n\n    .img-wrapper {\n      padding: 20px 10px;\n\n      img {\n        width: 70px;\n      }\n    }\n\n    .audio-preview {\n      opacity: 1;\n      position: absolute;\n      top: 80px;\n      left: 60px;\n\n      .icons {\n        padding: 11px;\n      }\n    }\n\n    .song-to-spotify {\n      right: 15px;\n      bottom: -10px;\n      button {\n        padding: 7px 10px;\n        font-size: 13px;\n        letter-spacing: 0.04em;\n      }\n    }\n  }\n`;\n\nexport default function Song({\n  trackData,\n  onPlay,\n  isPlaying,\n  currentID,\n  onEnd,\n}) {\n  // State for play and pause preview\n  const [songAudio] = useState(new Audio(trackData.preview_url));\n\n  // Image color\n  const [colors, setColors] = useState(null);\n\n  useEffect(() => {\n    isPlaying ? songAudio.play() : songAudio.pause();\n    // This is cleanup of the effect\n    return () => songAudio.pause();\n  }, [isPlaying, songAudio, colors]);\n\n  // When song ends, change state back to false\n  useEffect(() => {\n    songAudio.addEventListener(\"ended\", () => onEnd());\n    return () => {\n      songAudio.removeEventListener(\"ended\", () => onEnd());\n    };\n  }, [songAudio, onEnd]);\n\n  function togglePlay() {\n    onPlay(!isPlaying);\n  }\n\n  return (\n    <Fade bottom>\n      <SongStyle colorOnPlay={isPlaying} songColor={colors}>\n        <div className=\"audio-preview\">\n          {trackData.preview_url == null ? (\n            <FaRegMeh style={{ color: \"#ffffff\" }} className=\"icons\" />\n          ) : (\n            <div\n              className=\"test\"\n              onClick={() => {\n                togglePlay();\n              }}>\n              {isPlaying ? (\n                <FaPause\n                  style={{ color: \"#ffffff\" }}\n                  className=\"icons play-pause\"\n                />\n              ) : (\n                <FaPlay className=\"icons play-pause\" />\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"img-wrapper\">\n          <ColorExtractor\n            rgb\n            getColors={(color) => {\n              setColors(`${color[0]}`);\n            }}>\n            <img\n              src={trackData.album.images[0].url}\n              alt={`Track images ${trackData.name}`}\n            />\n          </ColorExtractor>\n        </div>\n        <div className=\"titles\">\n          <div className=\"track-name\">\n            <h3>{trackData.name}</h3>\n          </div>\n          <div className=\"artist-name\">\n            <p>{trackData.album.artists[0].name}</p>\n          </div>\n        </div>\n        <div className=\"song-to-spotify\">\n          <a\n            href={trackData.external_urls.spotify}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\">\n            <button>\n              <span>Open in Spotify</span>\n            </button>\n          </a>\n        </div>\n      </SongStyle>\n    </Fade>\n  );\n}\n","// Main packages\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport Song from \"./Song\";\nimport { device } from \"./mediaQueries\";\n\nconst TopSongsStyle = styled.div`\n  .error {\n    text-align: center;\n    padding: 10px;\n  }\n  ul {\n    display: grid;\n    justify-content: center;\n    grid-template-columns: repeat(1, 1fr);\n    list-style: none;\n    padding: 0;\n    /* margin: 0 100px; */\n  }\n\n  // Responsive style\n  @media ${device.laptopL} {\n    ul {\n      margin: 0 50px;\n    }\n  }\n\n  @media ${device.mobileL} {\n    ul {\n      margin: 0 20px;\n    }\n  }\n`;\n\nexport default function TopSongs({ topArtists, songColor }) {\n  const [currentPlay, setCurrentPlay] = useState(null);\n\n  return (\n    <TopSongsStyle>\n      {topArtists.length === 0 ? (\n        <h2 className=\"error\">No songs available from this time range!</h2>\n      ) : (\n        <ul>\n          {topArtists.map((track) => {\n            return (\n              <Song\n                key={track.id}\n                currentID={currentPlay}\n                onPlay={(isPlay) =>\n                  isPlay ? setCurrentPlay(track.id) : setCurrentPlay(null)\n                }\n                onEnd={() => {\n                  setCurrentPlay(null);\n                }}\n                isPlaying={track.id === currentPlay}\n                trackData={track}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </TopSongsStyle>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst PersonsDataStyle = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px 20px;\n  img {\n    width: 40px;\n    height: auto;\n    border-radius: 100%;\n  }\n\n  h3 {\n    font-size: 15px;\n    padding: 0 20px;\n  }\n\n  @media ${device.laptop} {\n    justify-content: center;\n    img {\n      width: 30px;\n    }\n    h3 {\n      font-size: 14px;\n      padding: 0 10px;\n    }\n  }\n`;\n\nexport default function PersonsData({ personsID }) {\n  const [personsData, setPersonsData] = useState({});\n\n  useEffect(() => {\n    const parsedHash = queryString.parse(window.location.hash);\n    async function getPersonsData() {\n      const response = await axios({\n        method: \"GET\",\n        url: \"https://api.spotify.com/v1/me\",\n        headers: {\n          Authorization: \"Bearer \" + parsedHash.access_token,\n        },\n      });\n\n      const { id, display_name, images } = response.data;\n      const personsInfo = {\n        persons_id: id,\n        display_name: display_name,\n        image: images[0].url,\n      };\n\n      setPersonsData(personsInfo);\n    }\n    getPersonsData();\n  }, []);\n\n  return (\n    <PersonsDataStyle onLoad={() => personsID(personsData.persons_id)}>\n      <div className=\"px-4\">\n        <img\n          className=\"w-8 object-cover rounded-full\"\n          src={personsData.image}\n          alt=\"profile_pic\"\n        />\n      </div>\n      <h3 className=\"px-4\">{personsData.display_name}</h3>\n    </PersonsDataStyle>\n  );\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n// Components\nimport { device } from \"./mediaQueries\";\n\nconst DropdownStyle = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 20px 0px 20px;\n  select {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    appearance: none;\n    background: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%238C98F2'><polygon points='0,0 100,0 50,50'/></svg>\")\n      no-repeat;\n    background-size: 12px;\n    background-position: calc(100% + 0px) calc(100% - 10px);\n    background-repeat: no-repeat;\n    outline: none;\n    border: none;\n    font-size: 17px;\n    background-color: #3450a1;\n    color: #ffffff;\n    width: 120px;\n    padding: 9px 15px;\n    margin: 0 10px;\n  }\n\n  @media ${device.laptop} {\n    select {\n      /* font-size: 12px; */\n      background-position: calc(100% + 0px) calc(100% - 6px);\n      padding: 8px 20px;\n    }\n  }\n\n  @media ${device.tablet} {\n    margin: 5px 10px 10px 10px;\n    select {\n      font-size: 14px;\n      padding: 7px 13px;\n    }\n  }\n`;\n\nexport default function Dropdown({ options, sortValue }) {\n  // Select reference to Select element\n  const selectRef = useRef();\n\n  return (\n    <DropdownStyle>\n      <select\n        ref={selectRef}\n        onChange={(e) => {\n          // Passsing sort value to parent\n          sortValue(e.target.value);\n        }}>\n        {options.map((option, index) => {\n          return (\n            <option key={index} value={option.value}>\n              {option.text}\n            </option>\n          );\n        })}\n      </select>\n    </DropdownStyle>\n  );\n}\n","// Main packages\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\n// import { motion } from \"framer-motion\";\n\nconst ModalStyle = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.555);\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: all 0.3s ease-in-out;\n  pointer-events: none;\n\n  &.show {\n    opacity: 1;\n    pointer-events: visible;\n\n    .modal-box {\n      transform: translateY(0px);\n    }\n  }\n\n  .modal-box {\n    display: grid;\n    background: #fff;\n    color: #000;\n    padding: 16px;\n    border-radius: 8px;\n    transition: all 0.5s;\n    transform: translateY(-50px);\n    transition: all 0.5s ease-in-out;\n\n    h1 {\n      text-align: center;\n      font-size: 18px;\n    }\n\n    .input-playlist-name {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 10px 0px;\n      label {\n        font-size: 14px;\n        color: #121212;\n      }\n\n      input {\n        -webkit-appearance: none;\n        border-radius: 0;\n        border: none;\n        outline: none;\n        border-bottom: 2px solid black;\n        padding: 3px;\n      }\n    }\n\n    .modal-buttons {\n      text-align: center;\n      display: grid;\n\n      .close-modal {\n        text-align: center;\n        background-color: #fff;\n        border: none;\n        color: rgba(0, 0, 0, 0.5);\n        padding: 8px 34px;\n        line-height: 18px;\n        font-size: 13px;\n        letter-spacing: 0.08em;\n        font-weight: bold;\n        letter-spacing: 1.76px;\n        cursor: pointer;\n      }\n\n      .form-submit {\n        cursor: pointer;\n        font-weight: bold;\n        font-size: 13px;\n        background-color: #dc07f3;\n        color: #fff;\n        padding: 9px 15px;\n        margin: 10px 20px;\n        border: none;\n        border-radius: 7px;\n        letter-spacing: 0.08em;\n        transition: all 0.3s;\n\n        &:hover {\n          background-color: #ba0ace;\n        }\n      }\n    }\n  }\n`;\n\nexport default function Modal({ show, onClose, POSTvalue, playlistSongs }) {\n  // State for user input (playlist name)\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [playlistUrl, setPlaylistUrl] = useState(null);\n  console.log(\"TEST\", playlistUrl);\n\n  function handleSubmit(e) {\n    // Prevents event default action\n    e.preventDefault();\n\n    // Capture access tokkens values\n    const parsedHash = queryString.parse(window.location.hash);\n    const url = `https://api.spotify.com/v1/users/${POSTvalue}/playlists`;\n\n    async function createPlaylistPOST() {\n      // POST method to create new playlist\n      await axios({\n        method: \"POST\",\n        url: url,\n        headers: {\n          Authorization: \"Bearer \" + parsedHash.access_token,\n          \"Content-Type\": \"application/json\",\n        },\n        data: {\n          name: playlistName,\n          description: \"Your top tracks based on calculated affinity\",\n          public: false,\n        },\n      }).then((response) => {\n        setPlaylistUrl(response.data.external_urls.spotify);\n        // Empty array to store playlists songs uris\n        const urisArray = [];\n        playlistSongs.map((song) => urisArray.push(song.uri));\n\n        // POST method to add songs to just created playlist\n        axios({\n          method: \"POST\",\n          url: `https://api.spotify.com/v1/playlists/${response.data.id}/tracks`,\n          headers: {\n            Authorization: \"Bearer \" + parsedHash.access_token,\n            \"Content-Type\": \"application/json\",\n          },\n          data: {\n            uris: urisArray,\n          },\n        });\n      });\n    }\n    // Calling create playlist\n    createPlaylistPOST();\n  }\n\n  return (\n    <ModalStyle className={`${show ? \"show\" : \"\"}`}>\n      {playlistUrl ? (\n        <div className={`modal-box`}>\n          <div className=\"modal-buttons\">\n            <a href={playlistUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n              <button className=\"form-submit\" type=\"button\">\n                Open playlist in Spotify\n              </button>\n            </a>\n            <button\n              className=\"close-modal\"\n              type=\"button\"\n              onClick={() => {\n                setPlaylistUrl(null);\n                onClose();\n              }}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      ) : (\n        <form action=\"\" onSubmit={handleSubmit} className=\"modal-box\">\n          <h1>CREATE A PLAYLIST</h1>\n          <div className=\"input-playlist-name\">\n            <label htmlFor=\"\">Playlist Name:</label>\n            <input\n              type=\"text\"\n              onChange={(e) => setPlaylistName(e.target.value)}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <input\n              className=\"form-submit\"\n              type=\"submit\"\n              value=\"Create playlist\"\n            />\n            <button className=\"close-modal\" type=\"button\" onClick={onClose}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      )}\n    </ModalStyle>\n  );\n}\n","// Main packages\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"normalize.css\";\n// import { motion } from \"framer-motion\";\n\n// Components\nimport GlobalStyles from \"../styles/GlobalStyle\";\nimport TopSongs from \"./TopSongs\";\nimport PersonsData from \"./PersonsData\";\nimport Dropdown from \"./Dropdown\";\nimport Modal from \"./Modal\";\nimport { device } from \"./mediaQueries\";\nimport { Fragment } from \"react\";\n\nconst RedirectPageStyle = styled.div`\n  nav {\n    position: fixed;\n    overflow: hidden;\n    width: 100%;\n    z-index: 1;\n    top: 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #3450a1;\n    color: #ffffff;\n    padding: 10px;\n    box-shadow: 0px 41px 93px rgba(0, 0, 0, 0.0403024),\n      0px 14.9657px 33.9465px rgba(0, 0, 0, 0.0576822),\n      0px 7.26556px 16.4804px rgba(0, 0, 0, 0.0723178),\n      0px 3.56171px 8.079px rgba(0, 0, 0, 0.0896976),\n      0px 1.40831px 3.19445px rgba(0, 0, 0, 0.13);\n\n    .dropdown-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n  .content-wrapper {\n    padding: 100px 50px;\n    display: flex;\n    justify-content: center;\n\n    .loading-wrapper {\n      height: 80vh;\n      display: grid;\n      justify-content: center;\n      align-items: center;\n      #loading {\n        display: inline-block;\n        width: 50px;\n        height: 50px;\n        border: 3px solid rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        border-top-color: #fff;\n        animation: spin 1s ease-in-out infinite;\n        -webkit-animation: spin 1s ease-in-out infinite;\n      }\n\n      @keyframes spin {\n        to {\n          -webkit-transform: rotate(360deg);\n        }\n      }\n      @-webkit-keyframes spin {\n        to {\n          -webkit-transform: rotate(360deg);\n        }\n      }\n    }\n  }\n\n  .modal-button {\n    cursor: pointer;\n    background: #dc07f3;\n    color: #fbfbfb;\n    border: none;\n    padding: 8px 10px;\n    margin: 0 20px;\n    border-radius: 7px;\n    font-weight: bold;\n    font-size: 17px;\n    line-height: 21px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.04em;\n    transition: all 0.3s;\n    box-shadow: 0px 24px 32px rgba(220, 7, 243, 0.14),\n      0px 16px 24px rgba(220, 7, 243, 0.1), 0px 2px 6px rgba(220, 7, 243, 0.08),\n      0px 0px 1px rgba(0, 0, 0, 0.04);\n\n    &:hover {\n      background-color: #ba0ace;\n    }\n  }\n\n  // Responsive style\n  @media ${device.laptopL} {\n    nav {\n      /* padding: px 0; */\n    }\n\n    .content-wrapper {\n      padding: 100px 0px;\n    }\n  }\n  @media ${device.laptop} {\n    nav {\n      display: grid;\n      grid-template-columns: repeat(1, 1fr);\n\n      .dropdown-wrapper {\n        margin-right: 15px;\n      }\n\n      .dropdown-wrapper {\n        order: 1;\n      }\n    }\n\n    .content-wrapper {\n      padding: 100px 10px;\n    }\n\n    .modal-button {\n      font-size: 14px;\n    }\n  }\n\n  @media ${device.tablet} {\n    nav {\n      border-bottom-left-radius: 7px;\n      border-bottom-right-radius: 7px;\n    }\n    .content-wrapper {\n      padding: 100px 0px 70px 0px;\n    }\n    .create-playlist {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      background-color: #3450a1;\n      width: 100%;\n      display: flex;\n      justify-content: center;\n      padding: 10px 0;\n      border-top-left-radius: 7px;\n      border-top-right-radius: 7px;\n      box-shadow: 0px 41px 93px rgba(0, 0, 0, 0.0403024),\n        0px 14.9657px 33.9465px rgba(0, 0, 0, 1),\n        0px 7.26556px 16.4804px rgba(0, 0, 0, 0.0723178),\n        0px 3.56171px 8.079px rgba(0, 0, 0, 0.0896976),\n        0px 1.40831px 3.19445px rgba(0, 0, 0, 0.13);\n      .modal-button {\n        font-size: 15px;\n        padding: 7px 13px;\n        margin: 10px;\n      }\n    }\n  }\n`;\n\nexport default function RedirectPage() {\n  // State for Spotify data\n  const [topArtists, settopArtists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // State for sorting data\n  const [rangeValue, setRangeValue] = useState(\"long_term\");\n  const [limitValue, setLimitValue] = useState(50);\n  // State for showing modal\n  const [showModal, setShowModal] = useState(false);\n  //State for persons ID\n  const [personsId, setPersonsId] = useState(null);\n\n  // Getting data form Spotify API\n  useEffect(() => {\n    const parsedHash = queryString.parse(window.location.hash);\n    async function getTopArtitsData() {\n      const urlAPI = `https://api.spotify.com/v1/me/top/tracks?time_range=${rangeValue}&limit=${limitValue}&offset=5`;\n      const response = await axios({\n        method: \"GET\",\n        url: urlAPI,\n\n        headers: {\n          Authorization: \"Bearer \" + parsedHash.access_token,\n        },\n      });\n      setLoading(true);\n\n      console.log(response);\n      const { items } = response.data;\n      settopArtists(items);\n    }\n\n    getTopArtitsData();\n  }, [rangeValue, limitValue]);\n\n  // Dropdown values\n  const dropDownTime = [\n    {\n      text: \"All time\",\n      value: \"long_term\",\n    },\n    {\n      text: \"Last 6 months\",\n      value: \"medium_term\",\n    },\n    {\n      text: \"Last month\",\n      value: \"short_term\",\n    },\n  ];\n\n  const dropDownSongs = [\n    {\n      text: \"50 Songs\",\n      value: 50,\n    },\n    {\n      text: \"30 songs\",\n      value: 30,\n    },\n    {\n      text: \"10 songs\",\n      value: 10,\n    },\n  ];\n\n  function sortValue(value) {\n    // If sorting value is not anumber set Range, if it is number, set Limit\n    isNaN(value) ? setRangeValue(value) : setLimitValue(value);\n  }\n\n  // Callback function to get persons ID\n  const getPersonsId = (personsId) => {\n    setPersonsId(personsId);\n  };\n\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <RedirectPageStyle>\n        <nav>\n          <div className=\"dropdown-wrapper\">\n            <Dropdown sortValue={sortValue} options={dropDownTime} />\n            <Dropdown sortValue={sortValue} options={dropDownSongs} />\n            <div className=\"create-playlist\">\n              <button\n                className=\"modal-button\"\n                onClick={() => {\n                  setShowModal(true);\n                }}>\n                Create Playlist\n              </button>\n            </div>\n          </div>\n          <PersonsData personsID={getPersonsId} />\n        </nav>\n        {/* <Background class=\"backgroundSVG\" songColor={songColor}></Background> */}\n        <div className=\"content-wrapper\">\n          <Modal\n            POSTvalue={personsId}\n            onClose={() => setShowModal(false)}\n            show={showModal}\n            playlistSongs={topArtists}\n          />\n          {loading ? (\n            <TopSongs topArtists={topArtists} />\n          ) : (\n            <div className=\"loading-wrapper\">\n              <div id=\"loading\"></div>\n            </div>\n          )}\n        </div>\n      </RedirectPageStyle>\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFoundPage() {\n  return (\n    <div>\n      <h1>PAGE NOT FOUND</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"../components/App\";\nimport RedirectPage from \"../components/RedirectPage\";\nimport NotFoundPage from \"../components/NotFoundPage\";\n\n// Creating page routes component\nexport default function AppRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/*Login page*/}\n        <Route exact path=\"/\" component={App} />\n        {/*Redirect after login page*/}\n        <Route path=\"/redirect\" component={RedirectPage} />\n        {/*Page not Found*/}\n        <Route component={NotFoundPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"./router/AppRouter\";\nimport \"./index.css\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}